import java.util.LinkedList;
import java.util.Scanner;

public class QuickResistor {

    // Private instance variables for color and tolerance codes
    private LinkedList<String> color_codes;
    private LinkedList<String> tolerance_codes;
    private LinkedList<Integer> value_codes;

    // Constructor to initialize the color and tolerance codes
    public QuickResistor() {
        color_codes = new LinkedList<>();
        color_codes.add("black");
        color_codes.add("brown");
        color_codes.add("red");
        color_codes.add("orange");
        color_codes.add("yellow");
        color_codes.add("green");
        color_codes.add("blue");
        color_codes.add("violet");
        color_codes.add("gray");
        color_codes.add("white");

        // tolerance_codes = new LinkedList<>();
        // tolerance_codes.add("golden");
        // tolerance_codes.add("silver");
        // tolerance_codes.add("None");

        value_codes = new LinkedList<>();
        for (int i = 0; i <= 10; i++) {
            value_codes.add(i);
        }
    }


    public String[] getBandColors(String[] band_colors) {
        String[] result;
        if (band_colors.length == 4) {
            // For 4-band resistors
            result = new String[]{band_colors[0], band_colors[1], band_colors[2], band_colors[3]};
        } else if (band_colors.length == 5) {
            // For 5-band resistors
            result = new String[]{band_colors[0], band_colors[1], band_colors[2], band_colors[3], band_colors[4]};
        } else {
            // Invalid input - throw an exception or return null, depending on your use case
            throw new IllegalArgumentException("Invalid number of bands: " + band_colors.length);
        }
        return result;
    }
    
    
    // Public method to calculate resistance based on band colors (4 band)
    public void calculateResistance(String[] result,String tolerance_color) {
        
        // Get the index of the color in the linked list
        int index1 = color_codes.indexOf(result[0]);
        int index2 = color_codes.indexOf(result[1]);
        int index3 = color_codes.indexOf(result[2]);

        //Get the values in the second linkedlist for these indexes
        int value1 = value_codes.get(index1);
        int value2 = value_codes.get(index2);
        int value3 = value_codes.get(index3);

        // Calculate the register value and multiplier based on the color codes
        int register_value = Integer.parseInt(String.format("%d%d", value1, value2));
        int multiplier = (int) Math.pow(10, value3);
        // Calculate and return the resistance value
        double calculated = (double) register_value * multiplier;

       
        if (tolerance_color.equals("golden")) {
            System.out.println("Resistance: " + calculated + " ohms +5%");
        } else if (tolerance_color.equals("silver")) {
            System.out.println("Resistance: " + calculated + " ohms +10%");
        } else {
            System.out.println("Invalid tolerance color!");
        }
    }

    // Polymorphism (5band)
    public void calculateResistance(String[] result, int k ,String tolerance_color) {
        k=0;
        // Get the index of the color in the linked list
        int index1 = color_codes.indexOf(result[0]);
        int index2 = color_codes.indexOf(result[1]);
        int index3 = color_codes.indexOf(result[2]);
        int index4 = color_codes.indexOf(result[3]);
    
        //Get the values in the second linkedlist for these indexes
        int value1 = value_codes.get(index1);
        int value2 = value_codes.get(index2);
        int value3 = value_codes.get(index3);
        int value4 = value_codes.get(index4);
    
        int register_value = Integer.parseInt(String.format("%d%d%d", value1,value2,value3));
        int multiplier = (int) Math.pow(10, value4);
        double calculated = (double) register_value * multiplier;

    
        if (tolerance_color.equals("golden")) {
            System.out.println("Resistance: " + calculated + " ohms +5%");
        } else if (tolerance_color.equals("silver")) {
            System.out.println("Resistance: " + calculated + " ohms +10%");
        } else if (tolerance_color.equals("None")) {
            System.out.println("Resistance: " + calculated + " ohms +10%");
            System.out.println("OR");
            System.out.println("Resistance: " + calculated + " ohms +5%");
        } else {
            System.out.println("Invalid tolerance color!");
        }
    }
    // Private method to check if a color is valid
    private boolean isValidColor(String color, String[] valid_colors) {
    for (String valid_color : valid_colors) {
        if (color.equals(valid_color)) {
            return true;
        }
    }
    return false;
    }
    //------------------------------------------------------------------------------------------------------------------------------//
    public void Menu(int x)
    {
        if(x==0)
        {
            return 0;
        }
        else if (x==1)
        {
            return 1;
        }
        else 
        {
            return "Enter valid input";
        }
    }
    //------------------------------------------------------------------------------------------------------------------------------//

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        QuickResistor finalObject = new QuickResistor();

        //convert this into a function of polymorphism in which if the input has 5 inputs the function changes
        System.out.println("--------------------------------------------------------------------------------------");
        System.out.println("QuickResistor is a Java tool that allows users to quickly enter the color bands on a resistor and get instantly calculated values");
        System.out.println("Created by :\n 1.Shreyas Dixit \n 2.Vedika Bhat  \n 3.Arya More  \n 4.Ameya Kottawar ");
        System.out.println("------------------------------ Welcome to QuickResistor ------------------------------");
        System.out.println("                                                                                      ");
        System.out.println("Which resistor do you have \n 4 band resistor \n 5 band resistor");
        System.out.println("Enter the value (4 or 5) : ");
        
        int n = scanner.nextInt();

        String[] band_colors = new String[n];
        String[] valid_colors = {"black", "brown", "red", "orange", "yellow", "green", "blue", "violet", "gray", "white"};
        
        for (int i = 0; i < n-1; i++) {
            while (true) {
                System.out.print("Enter color for band " + (i + 1) + ": ");
                String color = scanner.nextLine().toLowerCase();

                if (finalObject.isValidColor(color, valid_colors)) {
                    band_colors[i] = color;
                    break;
                } else {
                    System.out.println("Invalid color entered. Please enter one of the following: " + String.join(", ", valid_colors));
                }
            }
        }

        String tolerance_color;
        String[] valid_tolerance_colors = {"golden", "silver"};

        while (true) {
            System.out.print("Enter tolerance color (golden/silver): ");
            tolerance_color = scanner.nextLine().toLowerCase();
            if (finalObject.isValidColor(tolerance_color, valid_tolerance_colors)) {
            break;
        } else {
            System.out.println("Invalid tolerance color entered. Please enter 'golden' or 'silver'");
        }
    }
    int k = 0;
    if(n==4){finalObject.calculateResistance(band_colors, tolerance_color);}
    else{finalObject.calculateResistance(band_colors, k ,tolerance_color);}

    //-------------------------Menu-----------------------//
    System.out.println("Do you want to continue ? Press 0 to continue\n Press 1 to exit");
    int c=Scanner.nextInt();
    Menu(c);
    System.out.println(c);
}
}
